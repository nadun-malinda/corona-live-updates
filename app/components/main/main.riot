<main>
    <navbar />

    <div class="container text-primary mb-4">
        <p class="text-subtitle">Last update: {state.lastUpdate}</p>
    </div>

    <div class="container">
        <div class="row">
            <!-- Left -->
            <div class="col-lg-6">

                <div class="row">
                    <div class="col-sm-6 mb-4" each={card in state.glowCard}>
                        <glow-card glowCardData={card} />
                    </div>
                </div>

                <!-- Table -->
                <hospital-table hospitalData={state.hospitalData} />
                <!-- /Table -->

            </div>
            <!-- /Left -->

            <!-- Right -->
            <div class="col-lg-6 mb-4">
                <map-section />
            </div>
            <!-- /Right -->
        </div>
    </div>

    <footer-section />

    <script>
        import Navbar from '../Navbar/Navbar.riot'
        import HospitalTable from '../Table/Table.riot'
        import FooterSection from '../Footer/Footer.riot'
        import GlowCard from '../GlowCard/GlowCard.riot'
        import MapSection from '../Map/Map.riot'
        import dayjs from 'dayjs'
        const relativeTime = require('dayjs/plugin/relativeTime')
        dayjs.extend(relativeTime)

        export default {
            components: { Navbar, HospitalTable, FooterSection, GlowCard, MapSection },
            state: {
                hospitalData: [],
                glowCard: []
            },
            onMounted(props) {
                const {api} = props
                let cardData = [];
                this.getData(api)
                        .then(res => {
                            cardData.push(
                                {
                                    type: 'primary',
                                    mainTitle: 'Infections',
                                    glowCount: res.data.local_total_cases,
                                    subItems: [
                                        {
                                            title: 'New cases',
                                            subTitle: 'last 24 hrs',
                                            count: res.data.local_new_cases,
                                            icon: {
                                                class: 'fas fa-book-medical',
                                                type: 'primary'
                                            },
                                        },
                                        {
                                            title: 'Hospitalized',
                                            subTitle: 'currently',
                                            count: res.data.local_total_number_of_individuals_in_hospitals,
                                            icon: {
                                                class: 'fas fa-procedures',
                                                type: 'warning'
                                            },
                                        }
                                    ]
                                },
                                {
                                    type: 'danger',
                                    mainTitle: 'Death',
                                    glowCount: res.data.local_deaths,
                                    subItems: [
                                        {
                                            title: 'New death',
                                            subTitle: 'last 24 hrs',
                                            count: res.data.local_new_deaths,
                                            icon: {
                                                class: 'far fa-frown',
                                                type: 'danger'
                                            },
                                        },
                                        {
                                            title: 'Recovered',
                                            subTitle: 'during the time',
                                            count: res.data.local_recovered,
                                            icon: {
                                                class: 'fas fa-smile',
                                                type: 'success'
                                            },
                                        }
                                    ]
                                }
                            )

                            this.update({
                                hospitalData: res.data.hospital_data,
                                lastUpdate: dayjs(res.data.update_date_time, "YYYY-MM-DD h:m:s").fromNow(),
                                glowCard: cardData
                            })
                        })
            },

            async getData(api) {
                try {
                    const response = await fetch(api)
                    const json = response.json()
                    return json
                } catch(error) {
                    console.log('error: ', error)
                }
            },
        }
    </script>
</main>